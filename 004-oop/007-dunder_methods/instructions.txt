1.
Take a look at the code in script.py. The abstract class AbstractEmployee is defined. It has all the logic that has previously existed in the Employee class, except that the .say_id() method is not implemented and has the @abstractmethod decorator.

The Employee class currently has no implementation.

Run the code and observe that e1.say_id() is causing an AttributeError since the Employee class has no implementation.

2.
Let’s fix this error:

Make the Employee class inherit from the AbstractEmployee class

3.
Nice work! But wait, there’s still an error!

TypeError: Can't instantiate abstract class Employee with abstract methods say_id
The .say_id() method in the AbstractEmployee class uses the @abstractmethod decorator. This means any class that inherits from AbstractEmployee must implement a .say_id() method.

Inside the Employee class replace the pass statement, then:

Define a say_id() method that outputs a message with self.id
When complete you should see the output in the console.